<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="LibRhythmCat-RCLibDBus">
<refmeta>
<refentrytitle role="top_of_page" id="LibRhythmCat-RCLibDBus.top_of_page">RCLibDBus</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBRHYTHMCAT Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>RCLibDBus</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="LibRhythmCat-RCLibDBus.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>#define             <link linkend="RCLIB-DBUS-TYPE:CAPS">RCLIB_DBUS_TYPE</link>
struct              <link linkend="RCLibDBus">RCLibDBus</link>;
struct              <link linkend="RCLibDBusClass">RCLibDBusClass</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rclib-dbus-exit">rclib_dbus_exit</link>                     ();
<link linkend="GObject"><returnvalue>GObject</returnvalue></link> *           <link linkend="rclib-dbus-get-instance">rclib_dbus_get_instance</link>             ();
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rclib-dbus-init">rclib_dbus_init</link>                     (<parameter>const <link linkend="gchar"><type>gchar</type></link> *app_name</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *first_property_name</parameter>,
                                                         <parameter>...</parameter>);
<link linkend="gulong"><returnvalue>gulong</returnvalue></link>              <link linkend="rclib-dbus-signal-connect">rclib_dbus_signal_connect</link>           (<parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>,
                                                         <parameter><link linkend="GCallback"><type>GCallback</type></link> callback</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rclib-dbus-signal-disconnect">rclib_dbus_signal_disconnect</link>        (<parameter><link linkend="gulong"><type>gulong</type></link> handler_id</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="LibRhythmCat-RCLibDBus.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="LibRhythmCat-RCLibDBus.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="RCLIB-DBUS-TYPE:CAPS" role="macro">
<title>RCLIB_DBUS_TYPE</title>
<indexterm zone="RCLIB-DBUS-TYPE:CAPS"><primary>RCLIB_DBUS_TYPE</primary></indexterm>
<programlisting>#define RCLIB_DBUS_TYPE (rclib_dbus_get_type())
</programlisting>
</refsect2>
<refsect2 id="RCLibDBus" role="struct">
<title>struct RCLibDBus</title>
<indexterm zone="RCLibDBus"><primary>RCLibDBus</primary></indexterm>
<programlisting>struct RCLibDBus {
};
</programlisting>
<para>
The D-Bus support. The contents of the <link linkend="RCLibDBus"><type>RCLibDBus</type></link> structure are
private and should only be accessed via the provided API.
</para></refsect2>
<refsect2 id="RCLibDBusClass" role="struct">
<title>struct RCLibDBusClass</title>
<indexterm zone="RCLibDBusClass"><primary>RCLibDBusClass</primary></indexterm>
<programlisting>struct RCLibDBusClass {
};
</programlisting>
<para>
<link linkend="RCLibDBus"><type>RCLibDBus</type></link> class.
</para></refsect2>
<refsect2 id="rclib-dbus-exit" role="function">
<title>rclib_dbus_exit ()</title>
<indexterm zone="rclib-dbus-exit"><primary>rclib_dbus_exit</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rclib_dbus_exit                     ();</programlisting>
</refsect2>
<refsect2 id="rclib-dbus-get-instance" role="function">
<title>rclib_dbus_get_instance ()</title>
<indexterm zone="rclib-dbus-get-instance"><primary>rclib_dbus_get_instance</primary></indexterm>
<programlisting><link linkend="GObject"><returnvalue>GObject</returnvalue></link> *           rclib_dbus_get_instance             ();</programlisting>
<para>
Get the running <link linkend="RCLibDBus"><type>RCLibDBus</type></link> instance.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>The running instance.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rclib-dbus-init" role="function">
<title>rclib_dbus_init ()</title>
<indexterm zone="rclib-dbus-init"><primary>rclib_dbus_init</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rclib_dbus_init                     (<parameter>const <link linkend="gchar"><type>gchar</type></link> *app_name</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *first_property_name</parameter>,
                                                         <parameter>...</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>app_name</parameter>&#160;:</term>
<listitem><simpara>the name of the application for register in the D-Bus</simpara></listitem></varlistentry>
<varlistentry><term><parameter>first_property_name</parameter>&#160;:</term>
<listitem><simpara>the name of the first property</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara>the value of the first property, followed optionally by more
name/value pairs, followed by <link linkend="NULL:CAPS"><literal>NULL</literal></link>
Initialize the D-Bus support module.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>Whether the initialization succeeded.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rclib-dbus-signal-connect" role="function">
<title>rclib_dbus_signal_connect ()</title>
<indexterm zone="rclib-dbus-signal-connect"><primary>rclib_dbus_signal_connect</primary></indexterm>
<programlisting><link linkend="gulong"><returnvalue>gulong</returnvalue></link>              rclib_dbus_signal_connect           (<parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>,
                                                         <parameter><link linkend="GCallback"><type>GCallback</type></link> callback</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>);</programlisting>
<para>
Connect the GCallback function to the given signal for the running
instance of <link linkend="RCLibDBus"><type>RCLibDBus</type></link> object.
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>the name of the signal</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>the the <link linkend="GCallback"><type>GCallback</type></link> to connect</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the user data</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>The handler ID.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rclib-dbus-signal-disconnect" role="function">
<title>rclib_dbus_signal_disconnect ()</title>
<indexterm zone="rclib-dbus-signal-disconnect"><primary>rclib_dbus_signal_disconnect</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rclib_dbus_signal_disconnect        (<parameter><link linkend="gulong"><type>gulong</type></link> handler_id</parameter>);</programlisting>
<para>
Disconnects a handler from the running dbus instance so it will
not be called during any future or currently ongoing emissions
of the signal it has been connected to. The <link linkend="handler-id"><type>handler_id</type></link> becomes
invalid and may be reused.
</para><variablelist role="params">
<varlistentry><term><parameter>handler_id</parameter>&#160;:</term>
<listitem><simpara>handler id of the handler to be disconnected</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
