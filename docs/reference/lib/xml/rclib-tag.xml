<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="LibRhythmCat-Tag-Processor">
<refmeta>
<refentrytitle role="top_of_page" id="LibRhythmCat-Tag-Processor.top_of_page">Tag Processor</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBRHYTHMCAT Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tag Processor</refname>
<refpurpose>Process tags</refpurpose>
</refnamediv>

<refsynopsisdiv id="LibRhythmCat-Tag-Processor.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#include &lt;rclib-tag.h&gt;

struct              <link linkend="RCLibTagMetadata">RCLibTagMetadata</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rclib-tag-free">rclib_tag_free</link>                      (<parameter><link linkend="RCLibTagMetadata"><type>RCLibTagMetadata</type></link> *mmd</parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="rclib-tag-get-fallback-encoding">rclib_tag_get_fallback_encoding</link>     ();
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="rclib-tag-get-name-from-fpath">rclib_tag_get_name_from_fpath</link>       (<parameter>const <link linkend="gchar"><type>gchar</type></link> *filename</parameter>);
<link linkend="RCLibTagMetadata"><returnvalue>RCLibTagMetadata</returnvalue></link> *  <link linkend="rclib-tag-read-metadata">rclib_tag_read_metadata</link>             (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rclib-tag-set-fallback-encoding">rclib_tag_set_fallback_encoding</link>     (<parameter>const <link linkend="gchar"><type>gchar</type></link> *encoding</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="LibRhythmCat-Tag-Processor.description" role="desc">
<title role="desc.title">Description</title>
<para>
Process the tags (metadata) of music, and provide some data
structures and functions for tag processing.
</para>
</refsect1>
<refsect1 id="LibRhythmCat-Tag-Processor.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="RCLibTagMetadata" role="struct">
<title>struct RCLibTagMetadata</title>
<indexterm zone="RCLibTagMetadata"><primary>RCLibTagMetadata</primary></indexterm>
<programlisting>struct RCLibTagMetadata {
    gint64 length;
    gchar *uri;
    guint tracknum;
    guint bitrate;
    gint samplerate;
    gint channels;
    gint year;
    gchar *title;
    gchar *artist;
    gchar *album;
    gchar *comment;
    gchar *ftype;
    gchar *emb_cue;
    GstBuffer *image;
    gboolean eos;
    gboolean audio_flag;
    gboolean video_flag;
    gpointer user_data;
};
</programlisting>
<para>
The structure for storing the music metadata.
</para><variablelist role="struct">
<varlistentry><term><link linkend="gint64"><type>gint64</type></link>&#160;<structfield id="RCLibTagMetadata.length">length</structfield>;</term>
<listitem><simpara>the length of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="RCLibTagMetadata.uri">uri</structfield>;</term>
<listitem><simpara>the URI of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="guint"><type>guint</type></link>&#160;<structfield id="RCLibTagMetadata.tracknum">tracknum</structfield>;</term>
<listitem><simpara>the track number of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="guint"><type>guint</type></link>&#160;<structfield id="RCLibTagMetadata.bitrate">bitrate</structfield>;</term>
<listitem><simpara>the bitrate of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gint"><type>gint</type></link>&#160;<structfield id="RCLibTagMetadata.samplerate">samplerate</structfield>;</term>
<listitem><simpara>the sample rate of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gint"><type>gint</type></link>&#160;<structfield id="RCLibTagMetadata.channels">channels</structfield>;</term>
<listitem><simpara>the channel number of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gint"><type>gint</type></link>&#160;<structfield id="RCLibTagMetadata.year">year</structfield>;</term>
<listitem><simpara>the year of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="RCLibTagMetadata.title">title</structfield>;</term>
<listitem><simpara>the title text of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="RCLibTagMetadata.artist">artist</structfield>;</term>
<listitem><simpara>the artist text of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="RCLibTagMetadata.album">album</structfield>;</term>
<listitem><simpara>the album text of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="RCLibTagMetadata.comment">comment</structfield>;</term>
<listitem><simpara>the comment text of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="RCLibTagMetadata.ftype">ftype</structfield>;</term>
<listitem><simpara>the file type of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="RCLibTagMetadata.emb-cue">emb_cue</structfield>;</term>
<listitem><simpara>the embeded CUE data of the music</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="GstBuffer"><type>GstBuffer</type></link>&#160;*<structfield id="RCLibTagMetadata.image">image</structfield>;</term>
<listitem><simpara>the GstBuffer which contains the cover image</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gboolean"><type>gboolean</type></link>&#160;<structfield id="RCLibTagMetadata.eos">eos</structfield>;</term>
<listitem><simpara>the EOS signal</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gboolean"><type>gboolean</type></link>&#160;<structfield id="RCLibTagMetadata.audio-flag">audio_flag</structfield>;</term>
<listitem><simpara>whether this file has audio</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gboolean"><type>gboolean</type></link>&#160;<structfield id="RCLibTagMetadata.video-flag">video_flag</structfield>;</term>
<listitem><simpara>whether this file has video</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gpointer"><type>gpointer</type></link>&#160;<structfield id="RCLibTagMetadata.user-data">user_data</structfield>;</term>
<listitem><simpara>the user data</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="rclib-tag-free" role="function">
<title>rclib_tag_free ()</title>
<indexterm zone="rclib-tag-free"><primary>rclib_tag_free</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rclib_tag_free                      (<parameter><link linkend="RCLibTagMetadata"><type>RCLibTagMetadata</type></link> *mmd</parameter>);</programlisting>
<para>
Free the memory allocated for metadata struct (RCLibTagMetadata).
</para><variablelist role="params">
<varlistentry><term><parameter>mmd</parameter>&#160;:</term>
<listitem><simpara>the metadata</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rclib-tag-get-fallback-encoding" role="function">
<title>rclib_tag_get_fallback_encoding ()</title>
<indexterm zone="rclib-tag-get-fallback-encoding"><primary>rclib_tag_get_fallback_encoding</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       rclib_tag_get_fallback_encoding     ();</programlisting>
<para>
Get the fallback encoding for the tag reading.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>The fallback encoding.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rclib-tag-get-name-from-fpath" role="function">
<title>rclib_tag_get_name_from_fpath ()</title>
<indexterm zone="rclib-tag-get-name-from-fpath"><primary>rclib_tag_get_name_from_fpath</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             rclib_tag_get_name_from_fpath       (<parameter>const <link linkend="gchar"><type>gchar</type></link> *filename</parameter>);</programlisting>
<para>
Return the base-name without extension from a full path or file name.
</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>the full path or file name</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>The base-name without extension.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rclib-tag-read-metadata" role="function">
<title>rclib_tag_read_metadata ()</title>
<indexterm zone="rclib-tag-read-metadata"><primary>rclib_tag_read_metadata</primary></indexterm>
<programlisting><link linkend="RCLibTagMetadata"><returnvalue>RCLibTagMetadata</returnvalue></link> *  rclib_tag_read_metadata             (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);</programlisting>
<para>
Read tag (metadata) from given URI.
</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>the URI of the music file</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>The Metadata of the music, NULL if the file is not a music file,
free after usage.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rclib-tag-set-fallback-encoding" role="function">
<title>rclib_tag_set_fallback_encoding ()</title>
<indexterm zone="rclib-tag-set-fallback-encoding"><primary>rclib_tag_set_fallback_encoding</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rclib_tag_set_fallback_encoding     (<parameter>const <link linkend="gchar"><type>gchar</type></link> *encoding</parameter>);</programlisting>
<para>
Set the fallback encoding for tag (metadata) reading,
notice that this setting will also affect the tag reading
in the Core module.
</para><variablelist role="params">
<varlistentry><term><parameter>encoding</parameter>&#160;:</term>
<listitem><simpara>the fallback encoding to set</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
